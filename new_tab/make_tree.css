/*Now the CSS*/

* {
	box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body{
  background-color:#ecf0f1;
}

.grid-container {
  display: grid;
  grid-template-columns: auto auto auto;
  background-color:#ecf0f1;
}

.grid-item {
  
  text-align: center;
}

.popup {
  box-sizing: border-box;
  padding: 5px;
  position: absolute;
  border: black solid 1px;
  border-radius: 2px;
  z-index: 1;
  top: 50%;
  left: 150%;
  background-color: white;
  visibility: hidden;
	opacity: 0;
	overflow: visible;
}

img {
  height: inherit;
  width: inherit;
}

.img-circle {
  position: relative;
  height: 20px;
  width: 20px;
}

.tree {
	
	height: 100vh;
	box-sizing: border-box;
  overflow: visible;
}

.tree ul {
	white-space: nowrap; /*Prevents Wrapping*/
  padding-top: 20px;
  position: relative;
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
}

.tree li {
	display: inline-block; /*Display inline and maintain block characteristics.*/
  vertical-align: top; /*Makes sure all the divs are correctly aligned.*/
  white-space: normal; /*Prevents child elements from inheriting nowrap.*/
  /*float: left;/**/
  text-align: center;
  list-style-type: none;
  position: relative;
  padding: 20px 5px 0 5px;
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
}

/*We will use ::before and ::after to draw the connectors*/

.tree li::before,
.tree li::after {
  content: '';
  position: absolute;
  top: 0;
  right: 50%;
  border-top: 1px solid #ccc;
  width: 58%;
  height: 20px;
}

.tree li::after {
  right: auto;
  left: 50%;
  border-left: 1px solid #ccc;
}

/*We need to remove left-right connectors from elements without 
any siblings*/

.tree li:only-child::after,
.tree li:only-child::before {
  display: none;
}

/*Remove space from the top of single children*/

.tree li:only-child {
  padding-top: 0;
}

/*Remove left connector from first child and 
right connector from last child*/

.tree li:first-child::before,
.tree li:last-child::after {
  border: 0 none;
}

/*Adding back the vertical connector to the last nodes*/

.tree li:last-child::before {
  border-right: 1px solid #ccc;
  border-radius: 0 5px 0 0;
  -webkit-border-radius: 0 5px 0 0;
  -moz-border-radius: 0 5px 0 0;
}

.tree li:first-child::after {
  border-radius: 5px 0 0 0;
  -webkit-border-radius: 5px 0 0 0;
  -moz-border-radius: 5px 0 0 0;
}

/*Time to add downward connectors from parents*/

.tree ul ul::before {
  content: '';
  position: absolute;
  top: 0;
  left: 50%;
  border-left: 1px solid #ccc;
  width: 0;
  height: 20px;
}

.tree li a {
  border: 1px solid #ccc;
  padding: 10px 10px;
  text-decoration: none;
  color: #666;
  font-family: arial, verdana, tahoma;
  font-size: 11px;
  display: inline-block;
  border-radius: 50%;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
  -moz-transition: all 0.5s;
}


#rect {
  border: #2c3e50 1px solid;
  position: relative;
  padding: 5px 5px;
  border-radius: 5px;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
}

/*Time for some hover effects*/

/*We will apply the hover effect the the lineage of the element also*/

.tree li a:hover,
.tree li a:hover+ul li a {
  background: #c8e4f8;
  color: #000;
  border: 1px solid #94a0b4;
}

.tree li a:hover {
  background: #2ecc71;
  border-width: 3px;
}

.tree li a:hover>.img-circle>.popup {
  visibility: visible;
	transition: all 0.6s ease-in-out;
  -webkit-transition: all 0.6s ease-in-out;
  -moz-transition: all 0.6s ease-in-out;
	opacity: 1;
	
}

/*Connector styles on hover*/

.tree li a:hover+ul li::after,
.tree li a:hover+ul li::before,
.tree li a:hover+ul::before,
.tree li a:hover+ul ul::before {
  border-color: #94a0b4;
  border-width: 2px;
}


